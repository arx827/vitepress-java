import{_ as a,c as e,o as i,a as h}from"./app.b24c6e2d.js";const f=JSON.parse('{"title":"12. 進階物件導向程式設計","description":"","frontmatter":{"title":"12. 進階物件導向程式設計"},"headers":[{"level":2,"title":"12.1 繼承","slug":"_12-1-繼承","link":"#_12-1-繼承","children":[]},{"level":2,"title":"12.2 繼承和建構子的關係","slug":"_12-2-繼承和建構子的關係","link":"#_12-2-繼承和建構子的關係","children":[]},{"level":2,"title":"12.3 使用父類別和子類別","slug":"_12-3-使用父類別和子類別","link":"#_12-3-使用父類別和子類別","children":[]},{"level":2,"title":"12.4 多型","slug":"_12-4-多型","link":"#_12-4-多型","children":[]},{"level":2,"title":"12.5 介面","slug":"_12-5-介面","link":"#_12-5-介面","children":[]},{"level":2,"title":"12.6 認識物件始祖 Object 類別","slug":"_12-6-認識物件始祖-object-類別","link":"#_12-6-認識物件始祖-object-類別","children":[]}],"relativePath":"guide/ocajp/chapter_12.md"}'),r={name:"guide/ocajp/chapter_12.md"},d=h('<h1 id="_12-進階物件導向程式設計" tabindex="-1">12. 進階物件導向程式設計 <a class="header-anchor" href="#_12-進階物件導向程式設計" aria-hidden="true">#</a></h1><h2 id="_12-1-繼承" tabindex="-1">12.1 繼承 <a class="header-anchor" href="#_12-1-繼承" aria-hidden="true">#</a></h2><ul><li><h3 id="_12-1-1-何謂繼承" tabindex="-1">12.1.1 何謂繼承 ？ <a class="header-anchor" href="#_12-1-1-何謂繼承" aria-hidden="true">#</a></h3></li><li><h3 id="_12-1-2-自然界生命的分類與繼承" tabindex="-1">12.1.2 自然界生命的分類與繼承 <a class="header-anchor" href="#_12-1-2-自然界生命的分類與繼承" aria-hidden="true">#</a></h3></li><li><h3 id="_12-1-3-java-的類別與繼承" tabindex="-1">12.1.3 Java 的類別與繼承 <a class="header-anchor" href="#_12-1-3-java-的類別與繼承" aria-hidden="true">#</a></h3></li></ul><h2 id="_12-2-繼承和建構子的關係" tabindex="-1">12.2 繼承和建構子的關係 <a class="header-anchor" href="#_12-2-繼承和建構子的關係" aria-hidden="true">#</a></h2><ul><li><h3 id="_12-2-1-繼承的宣告與目的" tabindex="-1">12.2.1 繼承的宣告與目的 <a class="header-anchor" href="#_12-2-1-繼承的宣告與目的" aria-hidden="true">#</a></h3></li><li><h3 id="_12-2-2-建構子和繼承的關係" tabindex="-1">12.2.2 建構子和繼承的關係 <a class="header-anchor" href="#_12-2-2-建構子和繼承的關係" aria-hidden="true">#</a></h3></li><li><h3 id="_12-2-3-使用-this-與-super-關鍵字呼叫建構子" tabindex="-1">12.2.3 使用 this 與 super 關鍵字呼叫建構子 <a class="header-anchor" href="#_12-2-3-使用-this-與-super-關鍵字呼叫建構子" aria-hidden="true">#</a></h3></li><li><h3 id="_12-2-4-建構子的設計原則" tabindex="-1">12.2.4 建構子的設計原則 <a class="header-anchor" href="#_12-2-4-建構子的設計原則" aria-hidden="true">#</a></h3></li></ul><h2 id="_12-3-使用父類別和子類別" tabindex="-1">12.3 使用父類別和子類別 <a class="header-anchor" href="#_12-3-使用父類別和子類別" aria-hidden="true">#</a></h2><ul><li><h3 id="_12-3-1-分析類別成員差異" tabindex="-1">12.3.1 分析類別成員差異 <a class="header-anchor" href="#_12-3-1-分析類別成員差異" aria-hidden="true">#</a></h3></li><li><h3 id="_12-3-2-建立父類別" tabindex="-1">12.3.2 建立父類別 <a class="header-anchor" href="#_12-3-2-建立父類別" aria-hidden="true">#</a></h3></li><li><h3 id="_12-3-3-使用覆寫" tabindex="-1">12.3.3 使用覆寫 <a class="header-anchor" href="#_12-3-3-使用覆寫" aria-hidden="true">#</a></h3></li><li><h3 id="_12-3-4-繼承和封裝" tabindex="-1">12.3.4 繼承和封裝 <a class="header-anchor" href="#_12-3-4-繼承和封裝" aria-hidden="true">#</a></h3></li><li><h3 id="_12-3-5-熟悉覆寫規則" tabindex="-1">12.3.5 熟悉覆寫規則 <a class="header-anchor" href="#_12-3-5-熟悉覆寫規則" aria-hidden="true">#</a></h3></li><li><h3 id="_12-3-6-抽象類別" tabindex="-1">12.3.6 抽象類別 <a class="header-anchor" href="#_12-3-6-抽象類別" aria-hidden="true">#</a></h3></li><li><h3 id="_12-3-7-父子類別關係的釐清" tabindex="-1">12.3.7 父子類別關係的釐清 <a class="header-anchor" href="#_12-3-7-父子類別關係的釐清" aria-hidden="true">#</a></h3></li><li><h3 id="_12-3-8-其他繼承樹案例" tabindex="-1">12.3.8 其他繼承樹案例 <a class="header-anchor" href="#_12-3-8-其他繼承樹案例" aria-hidden="true">#</a></h3></li></ul><h2 id="_12-4-多型" tabindex="-1">12.4 多型 <a class="header-anchor" href="#_12-4-多型" aria-hidden="true">#</a></h2><ul><li><h3 id="_12-4-1-使用父類別做變數的參考型別" tabindex="-1">12.4.1 使用父類別做變數的參考型別 <a class="header-anchor" href="#_12-4-1-使用父類別做變數的參考型別" aria-hidden="true">#</a></h3></li><li><h3 id="_12-4-2-使用萬用遙控器" tabindex="-1">12.4.2 使用萬用遙控器 <a class="header-anchor" href="#_12-4-2-使用萬用遙控器" aria-hidden="true">#</a></h3></li><li><h3 id="_12-4-3-由父類別參考控制子類別方法" tabindex="-1">12.4.3 由父類別參考控制子類別方法 <a class="header-anchor" href="#_12-4-3-由父類別參考控制子類別方法" aria-hidden="true">#</a></h3></li><li><h3 id="_12-4-4-使用轉型取得全部控制" tabindex="-1">12.4.4 使用轉型取得全部控制 <a class="header-anchor" href="#_12-4-4-使用轉型取得全部控制" aria-hidden="true">#</a></h3></li><li><h3 id="_12-4-5-使用多型" tabindex="-1">12.4.5 使用多型 <a class="header-anchor" href="#_12-4-5-使用多型" aria-hidden="true">#</a></h3></li></ul><h2 id="_12-5-介面" tabindex="-1">12.5 介面 <a class="header-anchor" href="#_12-5-介面" aria-hidden="true">#</a></h2><ul><li><h3 id="_12-5-1-使用介面的時機" tabindex="-1">12.5.1 使用介面的時機 <a class="header-anchor" href="#_12-5-1-使用介面的時機" aria-hidden="true">#</a></h3></li><li><h3 id="_12-5-2-使用介面" tabindex="-1">12.5.2 使用介面 <a class="header-anchor" href="#_12-5-2-使用介面" aria-hidden="true">#</a></h3></li><li><h3 id="_12-5-3-由介面參考控制子類別方法" tabindex="-1">12.5.3 由介面參考控制子類別方法 <a class="header-anchor" href="#_12-5-3-由介面參考控制子類別方法" aria-hidden="true">#</a></h3></li><li><h3 id="_12-5-4-java-裡使用介面的範例" tabindex="-1">12.5.4 Java 裡使用介面的範例 <a class="header-anchor" href="#_12-5-4-java-裡使用介面的範例" aria-hidden="true">#</a></h3></li></ul><h2 id="_12-6-認識物件始祖-object-類別" tabindex="-1">12.6 認識物件始祖 Object 類別 <a class="header-anchor" href="#_12-6-認識物件始祖-object-類別" aria-hidden="true">#</a></h2><ul><li><h3 id="_12-6-1-object-類別的地位" tabindex="-1">12.6.1 Object 類別的地位 <a class="header-anchor" href="#_12-6-1-object-類別的地位" aria-hidden="true">#</a></h3></li><li><h3 id="_12-6-2-tostring-方法" tabindex="-1">12.6.2 toString() 方法 <a class="header-anchor" href="#_12-6-2-tostring-方法" aria-hidden="true">#</a></h3></li></ul>',13),l=[d];function n(t,_,c,s,o,u){return i(),e("div",null,l)}const x=a(r,[["render",n]]);export{f as __pageData,x as default};
