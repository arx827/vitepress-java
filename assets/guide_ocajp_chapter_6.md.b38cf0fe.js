import{_ as a,c as e,o as i,a as r}from"./app.b24c6e2d.js";const v=JSON.parse('{"title":"6. 認識參考型別與操作物件","description":"","frontmatter":{"title":"6. 認識參考型別與操作物件"},"headers":[{"level":2,"title":"6.1 使用物件參考","slug":"_6-1-使用物件參考","link":"#_6-1-使用物件參考","children":[{"level":3,"title":"6.1.1 建立遙控器的概念","slug":"_6-1-1-建立遙控器的概念","link":"#_6-1-1-建立遙控器的概念","children":[]},{"level":3,"title":"6.1.2 由類別建構物件","slug":"_6-1-2-由類別建構物件","link":"#_6-1-2-由類別建構物件","children":[]},{"level":3,"title":"6.1.3 對不同物件使用不同物件參考","slug":"_6-1-3-對不同物件使用不同物件參考","link":"#_6-1-3-對不同物件使用不同物件參考","children":[]},{"level":3,"title":"6.1.4 JVM 記憶體分類","slug":"_6-1-4-jvm-記憶體分類","link":"#_6-1-4-jvm-記憶體分類","children":[]}]},{"level":2,"title":"6.2 使用 String 類別","slug":"_6-2-使用-string-類別","link":"#_6-2-使用-string-類別","children":[{"level":3,"title":"6.2.1 String 類別支援非標準的語法","slug":"_6-2-1-string-類別支援非標準的語法","link":"#_6-2-1-string-類別支援非標準的語法","children":[]},{"level":3,"title":"6.2.2 String 類別是 immutable","slug":"_6-2-2-string-類別是-immutable","link":"#_6-2-2-string-類別是-immutable","children":[]},{"level":3,"title":"6.2.3 String 類別的其他方法","slug":"_6-2-3-string-類別的其他方法","link":"#_6-2-3-string-類別的其他方法","children":[]}]},{"level":2,"title":"6.3 使用 StringBuilder 類別","slug":"_6-3-使用-stringbuilder-類別","link":"#_6-3-使用-stringbuilder-類別","children":[]},{"level":2,"title":"6.4 Java API 文件介紹","slug":"_6-4-java-api-文件介紹","link":"#_6-4-java-api-文件介紹","children":[{"level":3,"title":"6.4.1 使用 Java API 文件了解 String 類別的 substring() 方法","slug":"_6-4-1-使用-java-api-文件了解-string-類別的-substring-方法","link":"#_6-4-1-使用-java-api-文件了解-string-類別的-substring-方法","children":[]},{"level":3,"title":"6.4.2 使用 Java API 文件了解 System.out.println() 方法","slug":"_6-4-2-使用-java-api-文件了解-system-out-println-方法","link":"#_6-4-2-使用-java-api-文件了解-system-out-println-方法","children":[]}]},{"level":2,"title":"6.5 基本型別的包覆類別","slug":"_6-5-基本型別的包覆類別","link":"#_6-5-基本型別的包覆類別","children":[{"level":3,"title":"6.5.1 包覆類別的由來與使用","slug":"_6-5-1-包覆類別的由來與使用","link":"#_6-5-1-包覆類別的由來與使用","children":[]}]}],"relativePath":"guide/ocajp/chapter_6.md"}'),t={name:"guide/ocajp/chapter_6.md"},n=r('<h1 id="_6-認識參考型別與操作物件" tabindex="-1">6. 認識參考型別與操作物件 <a class="header-anchor" href="#_6-認識參考型別與操作物件" aria-hidden="true">#</a></h1><h2 id="_6-1-使用物件參考" tabindex="-1">6.1 使用物件參考 <a class="header-anchor" href="#_6-1-使用物件參考" aria-hidden="true">#</a></h2><h3 id="_6-1-1-建立遙控器的概念" tabindex="-1">6.1.1 建立遙控器的概念 <a class="header-anchor" href="#_6-1-1-建立遙控器的概念" aria-hidden="true">#</a></h3><h3 id="_6-1-2-由類別建構物件" tabindex="-1">6.1.2 由類別建構物件 <a class="header-anchor" href="#_6-1-2-由類別建構物件" aria-hidden="true">#</a></h3><h3 id="_6-1-3-對不同物件使用不同物件參考" tabindex="-1">6.1.3 對不同物件使用不同物件參考 <a class="header-anchor" href="#_6-1-3-對不同物件使用不同物件參考" aria-hidden="true">#</a></h3><h3 id="_6-1-4-jvm-記憶體分類" tabindex="-1">6.1.4 JVM 記憶體分類 <a class="header-anchor" href="#_6-1-4-jvm-記憶體分類" aria-hidden="true">#</a></h3><h2 id="_6-2-使用-string-類別" tabindex="-1">6.2 使用 String 類別 <a class="header-anchor" href="#_6-2-使用-string-類別" aria-hidden="true">#</a></h2><h3 id="_6-2-1-string-類別支援非標準的語法" tabindex="-1">6.2.1 String 類別支援非標準的語法 <a class="header-anchor" href="#_6-2-1-string-類別支援非標準的語法" aria-hidden="true">#</a></h3><h3 id="_6-2-2-string-類別是-immutable" tabindex="-1">6.2.2 String 類別是 immutable <a class="header-anchor" href="#_6-2-2-string-類別是-immutable" aria-hidden="true">#</a></h3><h3 id="_6-2-3-string-類別的其他方法" tabindex="-1">6.2.3 String 類別的其他方法 <a class="header-anchor" href="#_6-2-3-string-類別的其他方法" aria-hidden="true">#</a></h3><h2 id="_6-3-使用-stringbuilder-類別" tabindex="-1">6.3 使用 StringBuilder 類別 <a class="header-anchor" href="#_6-3-使用-stringbuilder-類別" aria-hidden="true">#</a></h2><h2 id="_6-4-java-api-文件介紹" tabindex="-1">6.4 Java API 文件介紹 <a class="header-anchor" href="#_6-4-java-api-文件介紹" aria-hidden="true">#</a></h2><h3 id="_6-4-1-使用-java-api-文件了解-string-類別的-substring-方法" tabindex="-1">6.4.1 使用 Java API 文件了解 String 類別的 substring() 方法 <a class="header-anchor" href="#_6-4-1-使用-java-api-文件了解-string-類別的-substring-方法" aria-hidden="true">#</a></h3><h3 id="_6-4-2-使用-java-api-文件了解-system-out-println-方法" tabindex="-1">6.4.2 使用 Java API 文件了解 System.out.println() 方法 <a class="header-anchor" href="#_6-4-2-使用-java-api-文件了解-system-out-println-方法" aria-hidden="true">#</a></h3><h2 id="_6-5-基本型別的包覆類別" tabindex="-1">6.5 基本型別的包覆類別 <a class="header-anchor" href="#_6-5-基本型別的包覆類別" aria-hidden="true">#</a></h2><h3 id="_6-5-1-包覆類別的由來與使用" tabindex="-1">6.5.1 包覆類別的由來與使用 <a class="header-anchor" href="#_6-5-1-包覆類別的由來與使用" aria-hidden="true">#</a></h3>',16),l=[n];function h(d,s,_,c,u,g){return i(),e("div",null,l)}const p=a(t,[["render",h]]);export{v as __pageData,p as default};
