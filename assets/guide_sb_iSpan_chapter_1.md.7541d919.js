import{_ as o,c as e,o as i,a as r}from"./app.b24c6e2d.js";const u=JSON.parse('{"title":"1. Spring Boot 介紹","description":"","frontmatter":{"title":"1. Spring Boot 介紹"},"headers":[{"level":2,"title":"Spring Boot 介紹 - 1","slug":"spring-boot-介紹-1","link":"#spring-boot-介紹-1","children":[]},{"level":2,"title":"Spring Boot 介紹 - 2","slug":"spring-boot-介紹-2","link":"#spring-boot-介紹-2","children":[]},{"level":2,"title":"Spring Boot 介紹 - 3","slug":"spring-boot-介紹-3","link":"#spring-boot-介紹-3","children":[]},{"level":2,"title":"Spring Boot 的特性","slug":"spring-boot-的特性","link":"#spring-boot-的特性","children":[]}],"relativePath":"guide/sb_iSpan/chapter_1.md"}'),t={name:"guide/sb_iSpan/chapter_1.md"},n=r('<h1 id="_1-spring-boot-介紹" tabindex="-1">1. Spring Boot 介紹 <a class="header-anchor" href="#_1-spring-boot-介紹" aria-hidden="true">#</a></h1><h2 id="spring-boot-介紹-1" tabindex="-1">Spring Boot 介紹 - 1 <a class="header-anchor" href="#spring-boot-介紹-1" aria-hidden="true">#</a></h2><ul><li><code>Spring Boot</code> 是由 Pivotal 團隊在 2013 年開始研發，2014 年 4 月發布第一個版本。所以它是一個新型的框架。</li><li>它基於 Spring4.0 設計(以及之後的 5.0)，不僅繼承了 Spring 框架原有的優秀特性，而且還透過簡化配置來進一步簡化了 Spring 應用的整個搭建和開發過程。</li><li><code>Spring Boot</code> 透過集成大量的框架使得依賴套件的版本一致，解決了多套件不同版本間衝突的問題。</li><li><a href="https://spring.io/projects/spring-boot" target="_blank" rel="noreferrer">官網文件</a></li></ul><h2 id="spring-boot-介紹-2" tabindex="-1">Spring Boot 介紹 - 2 <a class="header-anchor" href="#spring-boot-介紹-2" aria-hidden="true">#</a></h2><ul><li><code>Spring Boot</code> 也內建了 <code>Tomcat</code>，讓開發者不用擔心 Web 容器的環境問題。</li><li>絕大多數的 <code>Spring Boot</code> 應用系統只需編寫非常少量的組態檔，就可以完成組態設定的工作，系統開發人員可更加專注於業務邏輯的編寫。</li></ul><h2 id="spring-boot-介紹-3" tabindex="-1">Spring Boot 介紹 - 3 <a class="header-anchor" href="#spring-boot-介紹-3" aria-hidden="true">#</a></h2><ul><li><code>Boot</code> 有啟動的意思，為了讓開發者能夠快速開啟一個 <code>Spring 專案</code>，<code>Spring Boot</code> 幫開發者簡化了許多整合套件的設定。</li><li>可以整合 <code>Spring</code>、<code>Spring Data</code>、<code>Spring MVC</code>、<code>Spring Cloud</code>、...或其他多人使用的第三方套件等專案。</li><li>簡而言之，<code>Spring Boot</code> 只是一個整合工具，開發者還是要先學會 <code>Spring</code>、<code>Spring MVC</code> 的原理和內容。</li><li><code>Spring Boot</code> 目前(2022/11)的穩定版本為 3.0.5</li><li>詳情可見 <a href="https://spring.io" target="_blank" rel="noreferrer">Spring 官方網站</a></li></ul><h2 id="spring-boot-的特性" tabindex="-1">Spring Boot 的特性 <a class="header-anchor" href="#spring-boot-的特性" aria-hidden="true">#</a></h2><ul><li>Spring Boot makes it easy to create stand-alone, production-grade Spring based Applications that you can &quot;just run&quot;.</li><li>使用 <code>Spring Boot</code> 可輕鬆地完成獨立的、可用於企業營運級別 (production-grade) 的 <code>Spring 應用系統</code>，您可以直接執行它。</li><li><h3 id="特性" tabindex="-1">特性： <a class="header-anchor" href="#特性" aria-hidden="true">#</a></h3><ul><li>基於約定優於配置 (convention over configuration) 的精神，提供非常多的 <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties" target="_blank" rel="noreferrer">預設配置</a> 作為應用系統的預設值。若有需要也可以自行設定 (Override) 預設值。</li><li>依專案需要的功能來挑選適當的 <code>Starter</code> 就可使用預設配置</li><li>快速自動設定的功能 (Auto-Config)</li></ul></li></ul>',9),a=[n];function d(l,c,p,s,g,h){return i(),e("div",null,a)}const _=o(t,[["render",d]]);export{u as __pageData,_ as default};
